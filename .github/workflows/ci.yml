name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Backend Testing
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: askdentist_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, pgsql, redis
        coverage: xdebug

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-progress

    - name: Copy environment file
      working-directory: ./backend
      run: cp .env.example .env

    - name: Generate application key
      working-directory: ./backend
      run: php artisan key:generate

    - name: Set up test database
      working-directory: ./backend
      run: |
        php artisan config:clear
        php artisan migrate --force
        php artisan db:seed --force
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: askdentist_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres

    - name: Run PestPHP tests
      working-directory: ./backend
      run: ./vendor/bin/pest --coverage --min=80
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: askdentist_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  # Code Quality
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: backend/vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-progress

    - name: Run Laravel Pint (Code Formatting)
      working-directory: ./backend
      run: ./vendor/bin/pint --test

    - name: Run Larastan (Static Analysis)
      working-directory: ./backend
      run: ./vendor/bin/phpstan analyse

  # Contract Testing
  contract-tests:
    runs-on: ubuntu-latest
    needs: backend-tests
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: askdentist_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, pgsql

    - name: Install dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-progress

    - name: Copy environment file
      working-directory: ./backend
      run: cp .env.example .env

    - name: Generate application key
      working-directory: ./backend
      run: php artisan key:generate

    - name: Set up database
      working-directory: ./backend
      run: |
        php artisan config:clear
        php artisan migrate --force
        php artisan db:seed --force
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: askdentist_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres

    - name: Run Contract Tests
      working-directory: ./backend
      run: ./vendor/bin/pest --filter=ContractTest
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: askdentist_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres

  # E2E Testing with Dusk
  e2e-tests:
    runs-on: ubuntu-latest
    needs: backend-tests
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: askdentist_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, pgsql

    - name: Install dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-progress

    - name: Copy environment file
      working-directory: ./backend
      run: cp .env.example .env

    - name: Generate application key
      working-directory: ./backend
      run: php artisan key:generate

    - name: Set up database
      working-directory: ./backend
      run: |
        php artisan config:clear
        php artisan migrate --force
        php artisan db:seed --force
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: askdentist_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres

    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest

    - name: Run Laravel Dusk
      working-directory: ./backend
      run: php artisan dusk
      env:
        APP_URL: http://localhost:8000
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: askdentist_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres

    - name: Upload Dusk Screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: dusk-screenshots
        path: backend/tests/Browser/screenshots

  # Flutter Doctor App Testing
  flutter-doctor-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.x'
        channel: 'stable'

    - name: Get dependencies
      working-directory: ./apps/doctor
      run: flutter pub get

    - name: Verify Flutter installation
      working-directory: ./apps/doctor
      run: flutter doctor -v

    - name: Run analyzer
      working-directory: ./apps/doctor
      run: flutter analyze

    - name: Run tests
      working-directory: ./apps/doctor
      run: flutter test --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./apps/doctor/coverage/lcov.info
        flags: flutter-doctor
        name: flutter-doctor-coverage

  # Flutter Patient App Testing
  flutter-patient-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.x'
        channel: 'stable'

    - name: Get dependencies
      working-directory: ./apps/patient
      run: flutter pub get

    - name: Verify Flutter installation
      working-directory: ./apps/patient
      run: flutter doctor -v

    - name: Run analyzer
      working-directory: ./apps/patient
      run: flutter analyze

    - name: Run tests
      working-directory: ./apps/patient
      run: flutter test --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./apps/patient/coverage/lcov.info
        flags: flutter-patient
        name: flutter-patient-coverage

  # Security Testing
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'

    - name: Install dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-progress

    - name: Run security audit
      working-directory: ./backend
      run: composer audit

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install frontend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run npm audit
      working-directory: ./backend
      run: npm audit --audit-level=moderate